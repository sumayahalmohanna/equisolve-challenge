{"version":3,"sources":["CardList.js","App.js","reportWebVitals.js","index.js"],"names":["CardList","cards","useState","modal","setModal","modalName","setModalName","modalTitle","setModalTitle","modalImg","setModalImg","modalBody","setModalBody","toggleModal","card","name","title","photo_url","bio","Row","xs","map","Col","Card","CardImg","top","width","src","alt","CardBody","CardTitle","className","tag","CardSubtitle","Button","onClick","uuidv4","Modal","isOpen","toggle","ModalHeader","ModalBody","App","cardData","setCardData","useEffect","fetch","then","res","json","data","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oVAiDeA,EA3CE,SAAC,GAAY,IAAXC,EAAU,EAAVA,MAEf,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,qBAAlC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,qBAApC,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAgCN,qBAAhC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAkCR,qBAAlC,mBAAOS,EAAP,KAAkBC,EAAlB,KAGMC,EAAc,SAACC,GACnBV,GAAUD,GACVG,EAAaQ,EAAKC,MAClBP,EAAcM,EAAKE,OACnBN,EAAYI,EAAKG,WACjBL,EAAaE,EAAKI,MAGpB,OACI,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,UACKnB,EAAMoB,KAAI,SAAAP,GAAI,OACf,cAACQ,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,MAAMC,IAAKb,EAAKG,UAAWW,IAAI,mBACpD,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,IAAI,KAAhC,SAAsClB,EAAKC,OAC3C,cAACkB,EAAA,EAAD,CAAcF,UAAU,QAAQC,IAAI,KAApC,SAA0ClB,EAAKE,QAC/C,cAACkB,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAYC,IAAnC,6BANUsB,kBAWZ,eAACC,EAAA,EAAD,CAAOC,OAAQnC,EAAOoC,OAAQ1B,EAA9B,UACY,eAAC2B,EAAA,EAAD,CAAaD,OAAQ1B,EAArB,UACA,oBAAIkB,UAAU,OAAd,SAAsB1B,IACtB,oBAAI0B,UAAU,QAAd,SAAuBxB,OAEvB,qBAAKwB,UAAU,WAAWJ,IAAKlB,EAAUmB,IAAI,0BAC7C,cAACa,EAAA,EAAD,UAAY9B,W,YCZnB+B,MAzBf,WACE,MAAgCxC,mBAAS,MAAzC,mBAAOyC,EAAP,KAAiBC,EAAjB,KAaA,OAXAC,qBAAU,WACRC,MAAM,0DACLC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAAAG,GACJN,EAAYM,QAEb,IAID,qBAAKnB,UAAU,MAAf,SACE,eAACoB,EAAA,EAAD,WACE,cAAChC,EAAA,EAAD,UAAK,wDACJwB,GAAY,cAAC,EAAD,CAAU1C,MAAO0C,UCZvBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6e587059.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { Card, CardImg, CardBody, CardTitle, CardSubtitle, Button} from 'reactstrap';\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst CardList = ({cards}) =>{\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [modalName, setModalName] = useState();\r\n    const [modalTitle, setModalTitle] = useState();\r\n    const [modalImg, setModalImg] = useState();\r\n    const [modalBody, setModalBody] = useState();\r\n\r\n\r\n    const toggleModal = (card) => {\r\n      setModal(!modal);\r\n      setModalName(card.name);\r\n      setModalTitle(card.title);\r\n      setModalImg(card.photo_url);\r\n      setModalBody(card.bio);\r\n    }\r\n   \r\n    return(\r\n        <Row xs=\"3\">\r\n            {cards.map(card => (\r\n            <Col key={uuidv4()}>\r\n            <Card>\r\n            <CardImg top width=\"30%\" src={card.photo_url} alt=\"Card image cap\" />\r\n          <CardBody>\r\n            <CardTitle className=\"name\" tag=\"h5\">{card.name}</CardTitle>\r\n            <CardSubtitle className=\"title\" tag=\"h6\">{card.title}</CardSubtitle>\r\n            <Button onClick={() => toggleModal(card)}>view bio</Button>\r\n          </CardBody>\r\n            </Card>\r\n            </Col>\r\n          ))}\r\n          <Modal isOpen={modal} toggle={toggleModal}>\r\n                      <ModalHeader toggle={toggleModal}>\r\n                      <h4 className=\"name\">{modalName}</h4>\r\n                      <h6 className=\"title\">{modalTitle}</h6>\r\n                      </ModalHeader>\r\n                      <img className=\"modalImg\" src={modalImg} alt=\"Profile pic in Modal.\"/>\r\n                      <ModalBody>{modalBody}</ModalBody>\r\n                    </Modal>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default CardList;","import { useEffect, useState } from 'react';\nimport { Container, Row} from 'reactstrap';\nimport CardList from './CardList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  const [cardData, setCardData] = useState(null);\n\n  useEffect(() => {\n    fetch('https://bensdemo.prod.equisolve-dev.com/api/v1/eq-test')\n    .then(res => {\n      return res.json();\n    })\n    .then(data => {\n      setCardData(data);\n    })\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row><h1>Executive Leadership</h1></Row>\n        {cardData && <CardList cards={cardData} />}\n      </Container>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}